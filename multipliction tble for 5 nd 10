class MultiplicationTable extends Thread {
    private int number;

    public MultiplicationTable(int number) {
        this.number = number;
    }

    @Override
    public void run() {
        System.out.println("Thread " + this.getName() + " started for number: " + number);
        for (int i = 1; i <= 10; i++) {
            System.out.println(number + " x " + i + " = " + (number * i));
            try {
                Thread.sleep(300); 
            } catch (InterruptedException e) {
                System.out.println("Thread interrupted");
            }
        }
        System.out.println("Thread " + this.getName() + " finished for number: " + number);
    }
}

public class Main {
    public static void main(String[] args) {
        MultiplicationTable table5 = new MultiplicationTable(5);
        MultiplicationTable table10 = new MultiplicationTable(10);

        System.out.println("State of table5: " + table5.getState());
        System.out.println("State of table10: " + table10.getState());

        table5.start();
        table10.start();

        try {
            table5.join(); 
            table10.join(); 
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println("State of table5: " + table5.getState());
        System.out.println("State of table10: " + table10.getState());
    }
}
